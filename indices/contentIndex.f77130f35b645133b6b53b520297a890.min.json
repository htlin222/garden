{"/":{"title":"🦎 的知識花園 🌱","content":"\n# 歡迎來到 🦎 的知識花園\n\n![🏞️](https://i.imgur.com/ebQ9vAT.jpg)\n\n\u003e “Gardens … lie between farmland and wilderness … The garden is farmland that delights the senses, designed for delight rather than commodity.” – [Gardens](https://www.eastgate.com/garden/Gardens.html)\n\n歡迎光臨🦎 的知識花園，這個網站是由一名小小內科住院醫師維護，這裡有點雜草叢生，有很多地方都還在施工中，有亂長的藤蔓跟隨意嫁接的樹苗。本網站是是由各種醫學知識、程式學習心得所組成。希望偶然造訪這座花園的旅行者，以逛逛並從中獲得更多的啟發。如果你覺得這個網站很酷，也想自己弄一個出來，可以到摸魚專區的👉[[如何打造一座知識花園]]👈看看，也可以寫信到`1izard@duck.com`，一起討論。再次歡迎你的到來，期待你的訪問！\n\n\n*   當然，你也可以來[林協霆的blog][1]看看我的文章，說不定有什麼好玩的🎢\n\n## 醫學專區\n\n*   醫學知識庫主要是內科學，包括人體各個系統的結構、功能、常見疾病以及治療方式。還有內科疾病的診斷和治療方法，主要內容來自小麻、大哈、Dynamed、Uptodate。此外，還有許多臨床技能，如診斷、藥物治療、生理學檢查、Procedure技巧等。然後還有一些關於醫學研究的相關小筆記\n\n*   點👉[[medical]]👈進入醫學知識庫\n*   點👉[[researcher]]👈進入研究、統計相關的專區，不過裡面現在空無一物就是了\n\n## 摸魚專區\n\n這裡主要是一些非醫學的知識，關於在Mac系統下使用command line tools 的學習筆記，還有一些自己常用的軟體的使用心得及教學。\n\n*   👉[[如何打造一座知識花園]]👈\n*   👉[[Ai相關]]👈\n*   👉[[mac的一些好用軟體]]👈\n*\t👉[[command line interface]]👈\n*\t👉[[程式語言]]👈\n\n## 最近編輯的檔案\n\n\u003e [[recent]]\n\n[1]: https://htlin.site/\n","lastmodified":"2023-02-27T12:57:09.72610818Z","tags":null},"/blog/2020-11-25-seminar%E5%BF%85%E5%82%99nejm-%E9%A2%A8google-%E7%B0%A1%E5%A0%B1%E7%AF%84%E6%9C%AC2020%E5%B9%B4%E6%96%B0%E7%89%88":{"title":"Seminar必備！NEJM 風Google 簡報範本，2020年新版","content":"# Seminar必備！NEJM 風Google 簡報範本，2020年16:9新版\n![](https://i.imgur.com/7ao1XI5.png)\n\n## 複製方法：\n[先點我進到Google slide](https://docs.google.com/presentation/d/1VvV4z7gW3BvG6KmsVq2Mzh0uVYsgoR5S9OOcgkAXbA8/edit?usp=sharing)\n![](https://i.imgur.com/DAYLsvn_d.webp?maxwidth=760\u0026fidelity=grand)\n\n## Background\n網路上流竄著各式各樣的簡報素材，有各種簡報大師們在開班授課，彷彿會學會了簡報設計，就可以報出棒棒的簡報。然後花了一堆生命在研究配色、排版、字體，卻不知道觀眾(如我)其實不是很care這些，觀眾只care你講的東西，新不新？對不對？我覺得設計簡報可以是專業，但不是每個人都要會的專業，這個本意是拿來輔助溝通的工具，就應該多快好省處理完。\n\n在醫院裡看過各種各樣的簡報，有些人套用PowerPoint內建的一些花花綠綠的範本，字體亂七八糟，又小到看不見；也有是白底黑字大，簡單卻字字精華，聽完後考試都考100百分了。做簡報真的不用太美工，好簡報只要能有以下幾點就好：\n* 該對齊的對齊\n* 字大一點 - 24pt以上\n* 如果有條列，加個動畫吧，一點接著一點出現\n* 全半形不要亂用\n* 不要有錯字e.g.把Seminar拼成Seminer, Sminiararaiaiari\n* 圖大一點，最好放到滿\n* 重點記得強調(看你要是框起來、弄粗、還是放大)\n* 要放頁碼、出處\n* 不要放自己不懂的東西在slide上，一定被電\n* 按下面的時間來分配進度\n\n","lastmodified":"2023-02-27T12:57:09.72610818Z","tags":null},"/blog/2020-12-25-markdown%E8%87%AA%E5%8B%95%E7%94%A2%E7%94%9F%E6%8A%95%E5%BD%B1%E7%89%87%E4%BB%A5hackmd%E7%82%BA%E4%BE%8B":{"title":"markdown自動產生投影片，以hackmd為例","content":"最近老胡啟動了大哈讀書計畫，要花兩年的時間把整本3000多頁的大磚塊唸完。痛點在於每次做簡報很煩，要把教科書的內容變成投影片，會有很多機械式的剪貼跟排版。做到讓人覺得厭世。因此想研究如何在有限時間內用最快的速度做簡報(此方法也適用報paper)。\n在這樣的背景下，只要能把重點條列式地呈現出來就可以。第二順位就是要快。通常美編不重要，字不要太小就好。以下是摸索出的解決方法。主要使用hackmd的簡報功能。\n1. 先把要的內容一次全部貼到hackmd裡\n2. 段落變成條列式，自動分行加list：大致把每句話當成是一個重點，以全文搜尋Shift-Ctrl-R (Win) / Shift-Cmd-Option-F (Mac)  「. 」(句號加一個空格，如果單搜句號會搜到一些小數點)，取代為「. \\n * 」(句號+一個空格+一個反斜線+n+一個空格+一個米字號+一個空格)；「\\n」是markdown的換行；「* 」是項目符號\n原來是 sentence1. sentence2. sentence3. 操作後就變：\nsentence1.\n* sentence2.\n* sentence3.\n*\n再把頭尾的標號加一下，done，如果連這步都懶，可以研究正規表達式做更進階的搜尋(我還在學)\n3. 其他部分依照官網說明做成簡報：https://hackmd.io/s/how-to-create-slide-deck-tw\n我的建議是投影片標題用h3 即###\n用---分頁\n4. 貼圖片：Win+Shift+S(windows系統) / shift+ctrl+cmd+4 (Mac) 局部截圖然後直接貼上就可以傳到圖床去\n5. Final touch：用 ==文字==把要的重點標起來、修文字；另外我會適度加一點emoji；用上面提到的取代功能把所有的is/are/can be 變成👉 \nemoji 參考list\nikatyang/emoji-cheat-sheet: A markdown version emoji cheat sheet (github.com)\n#結論：\n實測大概一個單元一個小時內就可以變成一分完整的簡報，大哈一章大概8頁；step (1)+(2)5分鐘；step(3)10分鐘；step(4)5分鐘；step (5)比較花時間，要消化內容，大約30分鐘\n\n![](https://i.imgur.com/Dqe2k33_d.webp?maxwidth=1520\u0026fidelity=grand)\n![](https://i.imgur.com/73RAMSy_d.webp?maxwidth=1520\u0026fidelity=grand)\n","lastmodified":"2023-02-27T12:57:09.72610818Z","tags":null},"/blog/2021-09-25-cvc-insertion-note":{"title":"CVC放置筆記","content":"# 如何打CVC ? CVC insertion note\n\n###### tags: `tutorials`\n\n## Prepare\n\n一邊想著操作順序，一邊把東西排好：\n三對針筒、三項前菜(Guide wire、Cut、Dilator)、導管、\n三個固定(clamp、Suture、Tegaderm)\n\n- - -\n\n1. 5cc空針for local(接25號針頭)\n2. 10cc空針for blind try(接23號針頭)，也可以兩隻，一隻來rinse\n3. 紗布(不要搞得像NEJM示影片的命案現場)，多的血都打在紗布上\n10. Suture Kit\n11. Tegaderm (丟個兩片，有一片可以拿來當成把超音波變無菌的小法寶)\n\n\n#### CVC kit 裡面有的東西：\n3. 18號粗針接5cc的藍色 syringe (有屁眼)\n   1. 小技巧：套軟針(sheath)，這樣pun到時，送軟針，syringe跟硬針直接一起退\n\n5. Guidewire：\n   1. 一格為十公分\n   2. 記得送入到兩格，即20cm左右\n   3. 有Syringe的話要自己加10cm，送到3格\n6. 鋼針/刀片，在送dilator時切開皮膚用，記得鋼針要選針頭有斜面的\n7. Dilator\n8. Catheter：記得所有頭都先rinse，除了棕頭，即之後guide會出來的頭，以外，其他的都先c\u0008lump起來，但蓋子可以不用蓋，因為你最後還是要反抽確認\n9. clamp一對 (蝴蝶、豆豆)\n\n![](https://i.imgur.com/LgqBeC3.jpg)\nRoberts and Hedges’ Clinical Procedures in Emergency Medicine and Acute Care\n\n## Insertion\n\n### 在未消毒下可以先用Echo看一下\n\n### 穿衣、第一次消毒、鋪單、消毒\n\n### 把所有東西擺開來\n\n1. 先拆suture包，要個4-0 Nylon，把線先夾好，把所有剪刀、鑷子上的塑膠套都先扒光。把彎盆獨立拿出來，請nurse在裡面加一堆normal saline，放在一個順手好抽水的位置\n2. 抽Local、抽Normal Saline\n3. 拿CVC kit裡的小東西，按你要操作順序揹擺好，再拿大的東西e.g.guidewire、長針、CVC，不然先拿大東西小東西勾到就會亂滾GG\n4. Rinse一下管路\n5. 請nurse把Echo傘套丟進來，請他把探頭給你，你用傘套接住，慢慢擼套子(?)，讓nurse把套子拉走，沾無菌jelly\n\n### 開始放\n\n1. Echo看一下IJV走向，水平垂直兩個view，其實如果有Echo guide 不一定要小針試，確定的話大針直接上了，進針時negative pressure\n\n   * ![](https://i.imgur.com/UOecq13.png)\n   * ![](https://i.imgur.com/dnAjVXF.png)\n   * 看一下表皮到vein妌垂直多遠，也是就入針點到porbe水平多遠 (大概2~3公分)\n2. 如果是blind try的話，中了，大針再跟上從同一個入針點進入，退小針\n3. 怎樣打比較準：CV line insertion under the angles 102.15 ± 6.80 degrees in the axial plane, 36.21 ± 3.12 in the sagittal plane and 40.49 ± 5.09 head rotation yield satisfactory results.\n        *意思應該是站在病人的頭的左上側Axial 102±6度往右下打，讓他頭左轉40±5度，用大概Sagittal 35度往下*\n        因為ICA在內側，站右打很容易往左偏，就會打到動脈\n   ![](https://i.imgur.com/RcokSwb.png)\n   ![](https://i.imgur.com/diCAYiA.png)\n   ![](https://i.imgur.com/XX6hQX7.jpg)\n        *Barzegari, Hassan, et al. \"Proper angle of sono-guided central venous line insertion.\" Emergency 4.3 (2016): 155.*\n        McGee, David C., and Michael K. Gould. \"Preventing complications of central venous catheterization.\" New England journal of medicine 348.12 (2003): 1123-1133.\n4. 人的站位也很重要，可以幾乎跟床垂直站，因為人緊張時手會一直彎\n   ![](https://i.imgur.com/lkYMG7G.jpg)\n5. 大針上後，接下來的事情就很簡單了，該退軟針的退，送guidewire到20~30公分，也是「█ █」跟「█ █ █」之間\n\n# Six-step approach to ultrasound-guided central venous catheter placement\n\n![](https://i.imgur.com/5yF3P8H.png)\n![](https://i.imgur.com/mgmIMov.png)\n    * Saugel et al. Critical Care (2017) 21:225 \n\n# Procedure Note\n\n#### Indication: Hemodynamic monitoring/Intravenous access\n\nThe patient was placed in a dependent position appropriate for central line placement based on the vein to be cannulated. The patient’s ***right/left neck was prepped and draped in sterile fashion. 1% Lidocaine was used to anesthetize the surrounding skin area. A triple lumen  9-French Cordis catheter was introduced into the the***  subclavian/internal jugular/common femoral vein using the Seldinger technique  ___and under ultrasound guidance. The catheter was threaded smoothly over the guide wire and appropriate blood return was obtained. Each lumen of the catheter was evacuated of air and flushed with sterile saline. The catheter was then sutured in place to the skin and a sterile dressing applied. Perfusion to the extremity distal to the point of catheter insertion was checked and found to be adequate. \n\nAttending___ was present for the entire procedure.\n\nEstimated Blood Loss: \\_\\_\\_\\_ cc\nThe patient tolerated the procedure well and there were no complications.\n\n# Ref\n\nhttps://proceduralist.org/cvc-cannulation/","lastmodified":"2023-02-27T12:57:09.72610818Z","tags":null},"/blog/2022-04-27-%E6%88%91%E7%9A%84icu-patient-list":{"title":"我🦎 的ICU patient list","content":"\n跌跌撞撞過完一個月北榮 ICU course，雖然還是覺得自己很廢，但還是覺得有稍稍掌握了critical care的精神。粗算一下每個病人每班都有大約100件需要知道的事，從呼吸器設定到接下來的動向，10個病人乘起來就有1000件事，而預設的交班單是厚厚一疊紙，要查找也不夠快，查房VS隨口一句：所以病人的ventilator setting如何？直接腦袋打結。因此要如何把這1000件事有效率的整理起來真的很需要一張有大局觀的list。這份list是從上班的第一天開始一路迭代到月底，使用起來還算順手。\n\n每天接班時先用黑筆寫完，有任何更正、新事項用紅筆寫，寫note時就把紅筆的部分更正上去\n\n![](https://i.imgur.com/Vrogrpe.jpg)\n![](https://i.imgur.com/AG7sxOf.jpg)\n[檔案連結](https://bit.ly/iculist) 自行複製到自己的goole drive裡\n\n# ☑️正面\n## 5️⃣大事項(北榮的習慣)：\n### 🫁 VENTILATION\n- FiO2, VRate, PEEP, PC/VC (or other mode)\n- ABG\n- Weaning (RSBI, Cuff leak)\n- 痰\n- 呼吸相關用藥 e.g. SABA, SAMA, epinephrine inhalation\n\n### 🫀CIRCUATION\n- MAP, pulse\n- 升壓藥、泡法(e.g. Levophed 4v or 2v in D5W 250)、滴數\n- ECMO (VV/VA): FdO2, Gas flow, Pump speed, aPTT\n- SVV, cardioechogram, CVP, EKG\n\n### 🦠 INFECTION/\n- Culture, Susceptibility testing, Viral PCR\n- Abx, date, dose, \n- Last fever\n- WBC/CRP/PCT\n- Body fluid cell count\n- HBV/HCV\n\n### 🧠 SEDATION (Neurology)\n- Dormicum, Propofol, Fentanyl, Nimbex\n- GCS\n- Puiple, Reflex\n\n### 🍔 NUTRITION\n- 目前diet\n- NPO 原因，IVF?\n- Ca, Mg, P\n- Liver (AST, ALT, T.bili, …)\n\n### 6️⃣ 🚽 Renal應該要算第六個…\n- Urine, I/O, drainage\n- IBW, dry weight\n- RRT(HD, SLEDD, CVVH, CVVHDF): flow rate \n- Lasix?\n- Na/K\n\n### 💥 ACTIVE\n- Primary diagnosis\n- Background and progress  \n- Issues over the last 24 hours\n- 重要用藥 e.g. steroid, Eltroxin, DDAVP, DAPT, NOAC, antineoplastic agents, GCSF… \n\n# ☑️反面\n### 📌待辦(急)\n- VS/會診醫師下的order\n- STAT的藥\n- Procedure\n\n### 📍待辦(不急)\n- Renew order\n- 寫note\n- 追報告\n\n### ☎️會診、聯絡\n- 會診也算是急待辦事項，越早越好\n- 聯絡家屬包括病解、DNR、同意書、自費、氣切\n\n### 📸 影像\n- POCUS findings (Pleural effusion, CBD dilated, Ascites, IVC diameter)\n- Radiology report \n- CXR自己簡單畫一下，跟昨天比是進步退步？\n🩸血球/凝血，要不要輸血？目標？\n🧪最近的Lab (esp. Lactate, Albumin, NH4+)，要不要校正\n📋血單 (特別注意TPN, ECMO, QW blood draw)\n\n# 🧐Tips: 自己發展一套符號系統\n- #診斷、Active problem\n- @於某時間，正在什麼治療上\n- □ 放在每個待辦前，完成後在上面打 ☑️\n- Δ 取delta 義，表示titrate, taper, switch e.g. ΔMTP→15.6mg \n- $ 自費\n- ? 疑似、要問的事、不確定，也可以在後面寫個 (Y/N) \n- 要追的事項後面放一對，(   )，結果填入\n- 速記Lab可以參考laboratory fishbone\n- 抗生素縮寫可以拿antibiotics abbreviation list關鍵字餵狗\n- 其他縮寫參考小麻\n\n","lastmodified":"2023-02-27T12:57:09.72610818Z","tags":null},"/blog/2022-07-03-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E6%B8%AC%E5%BC%8F":{"title":"醫學簡報心法","content":"\n# 前言\n我覺得醫學簡報最重要的精神，是花最少的時間，讓聽眾覺得你有很用心的在整理，臨床工作繁重，還要值班，花很多時間作報告等於變相要人加班。其實大家沒有很在乎排版、美編、配色、圖表什麼的，字不要太小就好，白底黑字，該強調的強調。反而重要是整體報告的邏輯，口條。臨床報告最常見，當常是case-based discussion、EBM、MM，主要就是從一個手上照顧的病人去延伸一些議題來探討，所以想要分享一下自己作報告的流程，也歡迎大家提出意見跟想法。\n\n## 基本架構\n首先，最好要有一個模板，每次都用同樣的模板就好，漸漸優化它，同樣標題/內容的版式，就可以再細分：純文字、字配圖、三欄…等等，目標就是點開貼上內容就可用，不要再花時間調字體大小。如果手邊沒有模板可以Google我的名字後面加NEJM，就可以找到我做的模板。在準備病人的病史時，不要花時間當搬運工，直接點開系統邊講邊點就好，做得很美其實大家也不會細看，有的時候自己都懶得唸，觀眾最後都是聽你怎麼講，這部分應該要花最少的時間，我自己大概都用兩三頁投影片就解決，用基本的條列式就好。當然如果這個是一個院級、Grand Round的報告還是要做的認真一點。\n\n## 開場到病史細節\n在病史細節方面，如果跟這次住院無關、跟這次的主題無關，我都會直接略過不講，太多雜訊只是在浪費彼此的時間，檢驗報告除非系統真的呈現得很醜，或者是需要浪費很多點擊，才需要真正把它貼到投影片上。影像就直接點開系統就好，最好不要花超過半小時處理這些事情。\n\n\n## 討論\n接下來就是討論的部分，我覺得這部分大概要占整個報告的¾，當你選擇要用這個病人報告時，應該就有一些想要做的主題，如果只有一個主題會很無聊，所以我通常會找兩三個，第一可能是這個疾病的基本介紹，直接把小麻/ Uptodate 貼過來就好，再配上幾張NEJM的美圖，因為大家其實可以自己去看書，其他Topics盡量找一些診斷、治療的最新進展、或是這個病人的一些不尋常的發現，把這些關鍵詞拿去餵pubmed，過濾一下：時間選三年內、盡量不要找一些Q3以上的野雞期刊。\n\n## 如何找到合適的文章\n找兩三篇，跟你主題最符合的點開來看，其實就不用在pubmed上面瞎逛了，做報告最浪費時間的部分常常就是在亂搜尋東西。把找到的paper作為核心，我們就叫他核心paper好了：一頁放Abstract，一頁放圖表，接著直接跳到Discussion，一邊讀一邊把它每句話後面的reference點開來，按照他行文的順序，選個10篇做成投影片，看起來就會很有深度跟廣度，講起來又很有邏輯（畢竟已經有辛苦的核心paper作者幫我們整理過一次了）這些paper每一篇，一樣是貼摘要跟美美的圖片，講法就是：「有人在什麼時候做了一個什麼類型的研究，大概收了多少人，比較什麼跟什麼的差別，從這個圖表可以看得出來結論是某某某，套用在我們病人上，可以知道怎樣怎樣。」當然你也可以跟風學一下JAMA最近很常出現的一頁式摘要，就看你的報告時間決定要放幾篇，以我自己的語速，半小時的報告包含簡單的病人介紹，大概再另外找10篇就可以。這些paper也可以把原文的一些重要段落貼幾頁，然後右鍵略過，萬一被問就退出簡報模式來看一下，不要放在註解裡，因為字很小自己報告時會太緊張找不到重點。\n\n## 收尾\n講完了討論，最後就是Back To Our Patient，一樣條列式，再重新幫大家複習一次病人的病史，把Discussion裡的東西摘要一下。下一頁是Take Home Messages，主要是一些知識點，讓大家可以用在臨床上，例如一些診斷方法、疾病表現、流行病學、治療指引，這樣就可以收工了。\n## 問答\n最後一頁Q \u0026 A，最好自己先想兩三個問題放上去，發語詞就是：「我在作報告的時候有遇到這個問題，不知道老師在臨床上面有沒有什麼經驗。」\n\n## 其他\n在時間分配上，病人的部分大概用半小時整理好、查資料花一小時、開始整理再花兩小時，查資料方面，一定要裝Google Scholar外掛、easy pubmed外掛，前者可以產生固定格式的引用、後者可以顯示這篇paper是Q1~Q4以及壞壞sci-hub連結￼。用Google Slide、用bit.ly縮短網址、權限開任何人可以編輯，這樣任何一台電腦都可以馬上做，也不用登入帳號，零碎時間就可以完成很多事情。","lastmodified":"2023-02-27T12:57:09.72610818Z","tags":null},"/blog/2022-08-21-homebrew":{"title":"用Homebrew來安裝需要的App跟套件","content":"\n## 安裝xcode-select\n* 如果你是第一次打開可怕的終端機，可能會被提示安裝xcode必要的套件，裝就對了\n```shell\nxcode-select --install\n```\n\n## 安裝homebrew\n參考官網：[為 macOS（或 Linux）添上套件管理工具 — Homebrew](https://brew.sh/index_zh-tw)\n```shell\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n## 把homebrew加入path\n* 安裝完後，注意一下最後要把brew加進PATH裡，不知道PATH是什麼沒關係，看一下安裝程式碼的最後，應該會出現一段如下的說明，要你執行兩段程式碼，一段是以echo開頭的，一段是eval開頭。總之就是把這兩行分別執行(不要直接貼我的，有可能出錯)\n```shell\n# Add Homebrew to your PATH in $HOME/.zprofile:\necho 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' \u003e\u003e $HOME/.zprofile\n# 注意intel跟M1 homebrew 的安裝位置可能不一樣\neval \"$(/opt/homebrew/bin/brew shellenv)\"\n```\n* 最後檢查一下：\n```shell\nbrew doctor\n```\n\n## 安裝必要套件，如git, cask之類的東西(總之就是一些能讓homebrew順利跑起來的東西)\n```shell\nbrew install wget\n```\n\n## 在homebrew裡有分為formula跟cask，其中，cask選項可以讓我安裝一些圖像化App\n* 安裝的基本指令如下：\n```shell\nbrew install --cask \"App Name\"\n```\n* 像是Adobe\n```shell\nbrew install --cask adobe-creative-cloud\n```\n* 個人常用的軟體像是Edge, Obsidian, Google Drive, Dropbox, Zotero, Steam, Messenger, Telegram, iTerm, VSCode, Rstudio, Libreoffice，通通可以用cask指令來裝\n* 想知道自己常用的軟體能不能從homebrew安裝，可以參考：\n[homebrew-cask — Homebrew Formulae](https://formulae.brew.sh/cask/)\n* 或來下面這個repo裡探索一下：\n[serhii-londar/open-source-mac-os-apps: 🚀 Awesome list of open source applications for macOS. https://t.me/s/opensourcemacosapps](https://github.com/serhii-londar/open-source-mac-os-apps)\n\n## 從homebrew安裝開源字體\n常看到許多免費開源的字體，例如[2021開源免費字體下載懶人包 | 柴魚Shiba](https://techshiba.com/free-font/)，其實大部分都有被收錄在\n[Homebrew/homebrew-cask-fonts](https://github.com/Homebrew/homebrew-cask-fonts)這個集合裡。\n\n### 只需要先執行一次下面的指令(加入資料庫)：\n```shell\nbrew tap homebrew/cask-fonts\n```\n### 接著就用下面的指令安裝所有字體了\n```shell\nbrew install --cask font-noto-sans-cjk-tc\n```\n\n* [在這裡搜尋需要的字體，需要知道英文](https://github.com/Homebrew/homebrew-cask-fonts/find/master)\n### 推薦一些中文常見字型\n```shell\n# 源流明體\nbrew install --cask \"font-genryumin\"\n# 源石黑體\nbrew install --cask \"font-gensekigothic\"\n# 源樣黑體\nbrew install --cask \"font-genyogothic\"\n# 源柔黑體\nbrew install --cask \"font-genjyuugothic\"\n# 源泉圓體\nbrew install --cask \"font-gensenrounded\"\n# 源雲明體\nbrew install --cask \"font-genwanmin\"\n# 源樣明體\nbrew install --cask \"font-genyomin\"\n# jf-粉圓\nbrew install --cask \"font-jf-open-huninn\"\n# KOSUGI圓體\nbrew install --cask \"font-kosugi-maru\"\n# Google Noto Emoji\nbrew install --cask \"font-noto-emoji\"\n# 思源黑 繁中\nbrew install --cask \"font-noto-sans-cjk-tc\"\n# 思源宋體\nbrew install --cask \"font-noto-serif-cjk\"\n```\n\n## 安裝App Store 的App\n* 當你已習慣用brew時，就會出現連打開App Store都懶的症狀，這時就要使用mas：\n```shell\nbrew install mas\n```\n* 有了mas之後，在browser裡打開任一個想下載的App，發現網址裡有一段以id開始的代碼，例如keynote的如下：\n\u003e https://apps.apple.com/us/app/keynote/id409183694?mt=12\n* 它的id 就是409183694\n* 回到終端，輸入以下的指令：\n```shell\nmas install 409183694\n```\n* Keynote就會開始下載了！\n\n## 安裝一些常用的驅動\n* 跟安裝字體的邏輯一樣，要先加入drivers庫：\n```shell\nbrew tap homebrew/cask-drivers\n```\n* 接著就可以安裝你要的驅動了，如果不知道驅動的名字，可以在[這裡](https://github.com/Homebrew/homebrew-cask-drivers/tree/master/Casks)查詢\n* 這裡提供幾個常用的，就看個人需求下載\n```shell\n# logi滑鼠的驅動\nbrew install logitech-options\n# Xbox 360手把驅動\nbrew install xbox360-controller-driver-unofficial\n# Kyocera 印表機驅動\nbrew install kyocera-printer-drivers\n```\n\n## 備份所有用brew安裝的軟體\n* 當我們想換電腦時，會想知道我們的舊電腦裝了哪些軟體，想把它們打包成一個文件，最好之後可以一鍵下載\n* 輪入下面的指令：\n```shell\nbrew bundle dump --describe --force --file=\"~/Desktop/Brewfile\"\n# \"~/Desktop/Brewifle\" 可以改成你想要的位置跟檔名 e.g. ~/Downloads/myBrewPackages\n```\n* 就會在桌面產生一個叫Brewfile的文字檔，把這個檔案存好，你也可以[參考我的Brewifle](https://github.com/htlin222/dotfiles/blob/main/Brewfile)\n### 到另一台新電腦時，只要照著上面安裝好brew後，把上面提到的Brewfile放在桌面，接著執行：\n```shell\nbrew bundle --file=\"~/Desktop/Brewfile\"\n```\n登登，一切就會自動安裝了\n\n## 清理用不到的安裝檔\n* 其實brew做的事，也是去載下一個dmg檔然後把它打開拉進應用程式資料夾，而這些dmg檔會被保存在一個系統的角落，當我們安裝的軟體多起來的時候，就會很佔空間，因此要定期執行一下：\n```shell\n# 先用dry run選項乾跑一下，並不會真的執行，讓你先看一下有哪些檔案要被刪掉\nbrew cleanup --dry-run\n# 確定沒問題時，再執行\nbrew cleanup --prune=all\n# 清除掉快系統快取檔案\nrm -rf \"$(brew --cache)\"\n```\n* 如此一來就可以省下一些空間了：\n\n## 把某些軟體從homebrew的清單中刪除。\n* 所有從homebrew安裝的軟體，都會被homebrew追踨，在產生Brewfile時，就會被列進去，例如我們上面提到的字體，但有時候我們在新電腦不一定要安裝這這麼多字體，我們可以考慮直接讓homebrew不用追踨它們。\n* 很可惜，homebrew本身並沒有提供這樣的選項，所以我們要移動到以下這個資料夾：\n\n```shell\n# 如果你的mac是intel晶片：\ncd /usr/local/Caskroom\n# 如果你的mac是Apple Silicon：\ncd /opt/homebrew/Caskroom\n```\n* 接著執行`ls`列出所有資料夾，`rm -d \"app name\"`就可以刪除軟體資訊的資料夾，但軟體本身並不會被刪除。\n\n## 解除安裝某個軟體\n```shell\nbrew uninstall \"app name\"\n```\n\n## 如果你之前已經安裝過某個軟體，然後想改用brew 的方式重裝一次\n* 加上--force的選項就可以了\n```shell\nbrew install --cask --force \"App Name\"\n```\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/blog/2022-08-22-pyenv":{"title":"在Mac中運作Python的正確方法","content":"\n## 前言\n如果之前沒有跟python打過交道，想在mac上安裝python時，首先就會面對到：我是誰？我在哪裡的問題，因為mac本身自帶一個python3，如果在終端機裡執行的話，也是可以`print(\"hellow world\")`，接著，我們可能就會想開心地利用系統的pip來安裝需要的套件，然後這樣做是很危險的，因此pip時不時會提醒你要不要更新pip，但mac系統中其實有很多套件，可能需要比較低版本的python才能執行，更新可能造成不可逆的崩潰，因此，另外下載一個python來安裝是很重要的。\n\n接下來就會面對另一個問題：要載哪個版本？最直覺得做法就是到[Python.org](https://www.python.org/downloads/)下載最新的版本，打開後下一步下一步安裝完成。另外也可以`brew install python3`來安裝。同時也會有人建議用anaconda來安裝一些必要的套件。到最後，我們的電腦裡就會充斥著各種版本的python，大概像下面這張圖一樣：\n![python_environment.png (492×487)](https://imgs.xkcd.com/comics/python_environment.png)\n\n這時就容易會出現問題，常常我們建立了某個.py檔，在某些情況下可以正常import某些package，但當我們用其他軟體打開時，如jupyter lab、pycharm時，又會發現某些pip沒安裝到的套件。這樣我們的開發/學習環境變得很不固定，或是會重覆在不同地方安裝了相同的套件。\n\n要解決這個問題，首先要學會兩組常用得指令：\n* 在終端機中執行：\n```shell\nwhich python3\n```\n* 或在python中跑這組程式碼：\n```python\nimport sys\nprint(\"User Current Version:-\", sys.version)\n```\n* 這兩個方法都可以告訴我們目前的python環境a.k.a.我是誰、我在哪裡。\n\u003e 有時，我們只想寫一段小程式，並不需要anaconda的那一堆程式，這個時候開速搭建一個虛擬環境，為這個環境建立專用的python執行檔、及專用的pip3，我們就可以輕量化自己的開發環境，下面介紹pyenv - python的虛擬環境管理方法。\n\n---\n\n## 方法\n### 安裝pyenv 跟virtualenv\n* 如果還沒安裝homebrew請參考[用Homebrew來安裝需要的App跟套件](https://htlin.site/posts/homebrew-basic)\n```shell\nbrew install pyenv\nbrew install virtualenv\n```\n### 建立你的環境\n* 安裝所需要的python版本，如3.10.5\n```shell\npyenv install 3.10.5\n```\n* 將安裝好的python版本指定到我們自行命名的環境中\n```shell\npyenv virtualenv 3.10.5 \"YOUR_PROJECT\"\n```\n* 建一個資料夾，並進入\n```shell\nmkdir \"YOUR_PROJECT\"\ncd \"YOUR_PROJECT\"\n```\n* 將這個資料夾指定成我們剛剛命名的開發環境\n```\npyenv local \"YOUR_PROJECT\"\n```\n* 啟動開發環境\n```\npyenv activate \"YOUR_PROJECT\"\n```\n### 如何在環境中使用jupyter lab/notebook\n如果你之前有用任何方法安裝過jupyter相關的套件，輸入`jupyter notebook`啟動jupyter時，會發現目前的python是ipykernal，並不是我們指定環境下的python，而且還會被自動安裝了很多套件，因此需要用pip的方式重新安裝jupyter，並將目前環境的python指定為python的kernel。\n* 首先在開發環境中安裝一些常用的套件\n```shell\n# 先更新pip本身，確保是最新版\npip install --upgrade pip\n# 安裝主角jupyter\npip install pandas jupyter notebook matplotlib seaborn\n# 最後安裝ipykernal\npip install ipykernal\n```\n* 將環境的kernel指定為jupyter的kernel\n```\npython -m ipykernel install --user --name $(pyenv version-name) --display-name \"Python: $(pyenv version-name)\"\n```\n* 這個時候，我們運行`jupyter lab`，就可以看到新增notebook時，就有我們環境的kernel\n### TL;DR，直接將上面提到的指令打包成zsh的function\n* 在`~/.zshrc`裡加入以下行：\n```shell\nfunction pyenv-new() {\n  pyenv virtualenv $1 \"$2\"\n  mkdir ~/$2\n  cd ~/$2\n  pyenv local $2\n  pyenv activate $2\n}\nfunction pyenv-jupyter(){\n  pip install --upgrade pip\n  pip install pandas jupyter notebook\n}\nfunction pyenv-kernel() {\n  python -m ipykernel install --user --name $(pyenv version-name) --display-name \"Python: $(pyenv version-name)\"\n}\n```\n* 存檔後執行以程式碼來載入我們的變更\n```shell\nsource ~/.zshrc\n```\n\n---\n\n## 結果\n```shell\n# 創建一個環境\npyenv-new 3.10.5 \"PROJECT_NAME\"\n# 安裝Jupyter相關的套件\npyenv-jupyter\n# 安裝ipykernel\npip3 install ipykernel\n# 以目前環境的python為名創建一個kernel\npyenv-kernel\n# 開啟jupyter lab\njupyter lab\n```\n\n---\n\n## 討論\n在初學python時，我是傻傻地裝了anaconda整組，它下載了很多套件，但當我寫好了一些scripts，想在系統裡執行時，卻常常在import module時出錯，因此還要花很多時間跟環境變數奮鬥。但\n開始用pyenv管理後，我想調用不同版本的python，只要輸入`$HOME/.pyenv/versions/YOUR_PYENV_NAME/bin/python`即可，例如我可以在automator裡建立一個快速動作：[自動縮網址](https://bit.ly/3K9630K)，用快速鍵來觸發它。他需要用`pyperclip`、`bitlyshortener`這兩個套件，我只需要建立一個automator專屬的環境：\n```shell\npyenv-new 3.10.5 automator\npip install pyperclip bitlyshortener\n# 新增一個檔檔，貼入程式碼\ntouch ~/automator/bitly.py\n```\n* 如下圖輸入\n```shell\n$HOME/.pyenv/versions/YOUR_PYENV_NAME/bin/python $HOME/automator/bitly.py\n```\n![image_22-08-22_16_02_39](https://i.imgur.com/XF57xPc.png)\n* 再把服務指定給某組快速鍵，就可以拿來縮網址了\n\u003e 有用再來分享怎麼用python串bitly api來縮網址\n\n---\n\n## Reference\n[Using Jupyter Notebook in Virtual Environments for Python Data Science Projects | by Christine Egan | Towards Data Science](https://towardsdatascience.com/jupyter-notebooks-i-getting-started-with-jupyter-notebooks-f529449797d2)\n\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/blog/2022-08-28-md-bib-make":{"title":"用Raycast, Pandoc, Zotero實現Cite While You Write","content":"\n## 簡介\nCite While You Write, 簡稱CWYW，顧名思意就是讓我們在寫作時可以即時引用，並且生成引用條目bibliography，如果你是word或open office的使用者，可以很簡單地裝好zotero的外掛即可以開始使用。如果是R語言的使用者，Rstuido也提供完整的寫作環境。但如果是日常習慣以markdown來寫作，想實現CWYW就不是一件簡單的事。\n\n從兩個層面思考：(1)一個可以直接叫出如同zotero picker視窗的替代軟體，插入citation key，這裡使用Raycast (2)利用pandoc，把bib檔匯入。\n\n更多內容請見：[htlin222/md-bib-make](https://github.com/htlin222/md-bib-make)\n\n## 前置作業\n系統：Mac OS\n\n需要安裝的項目：\n### [Zotero Your personal research assistant](https://www.zotero.org/)\n```shell\n# 可以直接從官網下載安裝檔，或用：\nbrew install --cask zotero\n```\n#### Zotero需要安裝的plugin:\n[Better BibTeX for Zotero :: Better BibTeX for Zotero](https://retorque.re/zotero-better-bibtex/)\n\n### [Raycast](https://www.raycast.com/)\n```shell\n# 可以直接從官網下載安裝檔，或用：\nbrew install --cask raycast\n```\n#### Raycast 需要安裝的plugin:\n[reckoning-dev/zotero - Raycast Store](https://www.raycast.com/reckoning-dev/zotero)\n### [Make - GNU Project - Free Software Foundation](https://www.gnu.org/software/make/)\n```shell\nbrew install make\n```\n### [Pandoc - About pandoc](https://pandoc.org/)\n```shell\nbrew install pandoc\n```\n\n## Zotero設定：(以英文版說明)\n* `prefereces`\u003e`Better BibTex`\u003e`Citation Keys`\u003e`Citation Keys format`\n\u003e auth.lower + year+ veryshorttitle.lower\n\n![image_22-08-27_16_18_03](https://i.imgur.com/1KIdKxl.png)\n\n* `prefereces`\u003e`Better BibTex`\u003e`Export`\u003e`Quick Copy`\u003e`Quick Copy Format`\u003e\n\u003e Pandoc Citation\n\n![image_22-08-27_16_18_27](https://i.imgur.com/zrvgZWz.png)\n\n### 刷新所有citation key\n![image_22-08-27_16_17_31](https://i.imgur.com/HK6WEjv.png)\n### 輸出成兩種格式：Better BibLaTex, Better CSL JSON\n![image_22-08-27_16_19_14](https://i.imgur.com/PhWIGIn.png)\n* `File`\u003e`Export Library`\u003e`Format`\u003e`Better BibLaTex`\n\u003e 在Translator Options 選 Keep updated\n把檔案存成以下路徑:\n```shell\n~/Zotero/zotero_main.bib\n```\n* `File`\u003e`Export Library`\u003e`Format`\u003e`Better CSL JSON`\n\u003e 在Translator Options 選 Keep updated\n把檔案存成以下路徑:\n```shell\n~/Zotero/zotero_main.json\n```\n## Raycast 設定\n![image_22-08-27_16_20_29](https://i.imgur.com/Toxzuqv.png)\n注意：這裡的路徑都要寫完整路徑，不能寫`~/`或`$HOME`\n* Zotero Path\n```\n/Users/USER_NAME/Zotero/zotero.sqlite\n```\n* Better BibTex CSL JSON FILE\n```\n# 剛剛輸出的檔案\n/Users/USER_NAME/Zotero/zotero_main.json\n```\n* CSL format\n\u003e 選你要的，例如我選AMA，對本次操作無關。\n* 為zotero extension 設定一個快鍵，例如我用`ctrl+/`\n## 如何使用\n* 複製這個repo\n* 編輯main.md這個檔案\n### 如何加入citation?\n* 叫出raycast\n* 搜尋你要的文章\n* command+K 列出所有選項，選擇`Copy BibTex Citation Key`\n![image_22-08-27_16_29_57](https://i.imgur.com/WkSriZe.png)\n* 在要加入citation的地方先寫一個`@`，然後貼上citation key，最後呈現如 `@tesfaye2022articles`\n## Makefile文件設定：\n```shell\n# 改主檔案的名字：\nPROJECT=main\n\n# 引用格式 ，請把csl檔放在同一目錄下\nCITATIONSTYLE=american-medical-association.csl\n\n# 你的資料庫位置\nBIBLIO=~/Zotero/zotero_main.bib\n```\n## 加好你要的citaion後，只要在這個目錄下，輸入：\n```shell\nmake\n```\n輸出畫面應該會是：\n```shell\nmake\npandoc --from=markdown -s --bibliography ~/Zotero/zotero_main.bib --citeproc --csl=american-medical-association.csl --metadata link-citations=true main.md --output=main_output.docx\nrm -rf main_output.md\npandoc --from=markdown -s --bibliography ~/Zotero/zotero_main.bib --citeproc --csl=american-medical-association.csl --metadata link-citations=true main.md --to=gfm --output=main_output.md\n完成啦，讚的\nopen .\n```\n你就會得到 `main_output.md`, `main_output.docx`這兩個檔案\n\n---\n\n\n\nsome content\u003csup\u003e[1](#ref-epperla2021doublerefractory)\u003c/sup\u003e\n\n\u003cdiv id=\"refs\" class=\"references csl-bib-body\"\u003e\n\n\u003cdiv id=\"ref-epperla2021doublerefractory\" class=\"csl-entry\"\u003e\n\n\u003cspan class=\"csl-left-margin\"\u003e1. \u003c/span\u003e\u003cspan\nclass=\"csl-right-inline\"\u003eEpperla N, Hamadani M. Double-refractory\nHodgkin lymphoma: Tackling relapse after brentuximab vedotin and\ncheckpoint inhibitors. *Hematology*. 2021;2021(1):247-253.\ndoi:[10.1182/hematology.2021000256](https://doi.org/10.1182/hematology.2021000256)\u003c/span\u003e\n\n\u003c/div\u003e\n\n\u003c/div\u003e\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/blog/2022-08-29-anki-obsidian":{"title":"如何使用Obsidian_to_Anki","content":"\n## 背景\n很久以前在一些重要考試就會斷斷續續地使用Anki作為快速複習的工具，關於Anki的好，網上已有太多教學。近幾年卡片盒學習法開始成為顯學，Obsidian又是其中最廣為人使用的軟體，而現在的問題是：如何利用外掛的搭配，讓我們隨時隨地可以複習我們在Obsidian中的重點，以下接紹插件：Obsidian\\_to\\_Anki\n\n## 方法\n### 前提：\n* 本身對於Obsidian跟Anki的使用已經蠻了解的，這篇文給想要結合兩者的人。\n### AnkiConnect\n* AnkiConnect key: `2055492159`\n* Config\n```json\n{\n    \"apiKey\": null,\n    \"apiLogPath\": null,\n    \"webBindAddress\": \"127.0.0.1\",\n    \"webBindPort\": 8765,\n    \"webCorsOrigin\": \"http://localhost\",\n    \"webCorsOriginList\": [\n        \"http://localhost\",\n        \"app://obsidian.md\"\n    ]\n}\n```\n### Obsidian_to_Anki\n* Obsidian\\_to\\_Anki Settings: `Note type settings`\u003e`Basic`\n* 貼上下面這段表達式：\n```\n^\\- ((?:.+\\n)*?)\\n*[\\t ]+((\\- )?.+(?:\\n(?:^.{4}(?\u003c!\u003c!--)(?\u003c!\\- ..).*))*)(?:\\n^$)?\n```\n\n* Defaults: Deck: `Obsidian`\n* Hotkeys: Obsidian\\_to\\_Anki: Scan Vault: ` ⌘ ⌃ A `\n\n## 結果\n* 只要在製作筆記時以如下格式：`- 問題`，然後換行、縮排`- 答案`\n\n![image_22-08-29_14_35_54](https://i.imgur.com/sfh1Pev.png)\n\n* 按下設定好的快速鍵: ` ⌘ ⌃ A `\n* 如此以來，我們即可以一鍵將大量的筆記轉成一則則可以馬上複習的Anki卡片\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/blog/2022-09-01-jama-temp":{"title":"醫學簡報必備JAMA風格模版","content":"\n![image_22-09-01_22_09_23](https://i.imgur.com/Tu3tC8D.png)\n\n## TL;DR\n* [下載連結](https://docs.google.com/presentation/d/1d7NQodzOx5mWpeRQt-loT-obv6HxTEkppiHkdIrf79c/edit?usp=sharing)\n* `檔案`→`建立副本`→`整份簡報`\n* Have a nice day\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/blog/2022-09-13-pandoc-md-to-pptx":{"title":"懶人必備！一行指令將文字轉ppt檔","content":"\n## 一個指令自動生成投影片(.PPTX檔)\n最近因為常常要準備投影片上課，這種投影片主就是從教科書弄內容出來，標題加條列式為主，並不需要許多太複雜的排版，但在弄排版就很花時間(怒怒)。雖然有很多markdown自動變成投影片播放的功能，但就不能套用自己常用的樣式風格，也不容易交換檔案。發現 [What? Slides? From Markdown? | by Peter Conrad | Medium](https://stymied.medium.com/what-slides-from-markdown-5239ed31e7ac)介紹了用pandoc轉檔的方式，因此去看了官方文檔整理如下。\n\n## TL;DR\n\n* 首先要下載pandoc [Pandoc - Installing pandoc](https://pandoc.org/installing.html)\n* 我們要準備好markdown檔案(.md)，跟範本檔案(.pptx)，放在同一個資料，cd到資料夾下後輸入以下指令：\n\n```shell=\npandoc 來源檔.md -o 投影片名.pptx --reference-doc 範本檔.pptx\n```\n\n範本檔可以下載我的簡單NEJM風： [blog/nejm.pptx · htlin222/blog](https://github.com/htlin222/blog/blob/master/static/media/nejm.pptx)，載好後打開母片編輯，對照下面的說明。\n\n\n## 範本檔設計\n\n打開一個空白的pptx檔案，編輯母片，重新命名每個版面配置，最主要有以下七種(少一個都不行，每個字都要一樣，大小寫也要一樣)\n詳見： [Pandoc - Pandoc User’s Guide](https://pandoc.org/MANUAL.html)\n\n### Title Slide\n\nThis layout is used for the initial slide, which is generated and filled from the metadata fields date, author, and title, if they are present.\n意思是在你的mardkwon 文件最前面三行新增以下以`%`開頭的內容\n\n```\n%title\n%author\n%date\n```\n\n### Section Header\n\nThis layout is used for what pandoc calls “title slides”, i.e. slides which start with a header which is above the slide level in the hierarchy.\n單獨一行的一級標題\n\n```\n# Section\n```\n\n### Two Content\n\nThis layout is used for two-column slides, i.e. slides containing a div with class columns which contains at least two divs with class column.\n只要有以下語法，就可以實現兩欄效果，適合用來圖文搭配，如果要加入圖片的話，也是用markdown圖片的語法`![image title](image path)`：\n\n```\n## 預設都是二級標題開頭\n\n:::: {.columns}\n::: {.column}\n\n左邊\n\n- Bullet\n- Bullet\n- Bullet\n\n:::\n::: {.column}\n\n右邊\n\n- Bullet\n- Bullet\n- Bullet\n\n:::\n::::\n\n```\n\n### Comparison\n\nThis layout is used instead of “Two Content” for any two-column slides in which at least one column contains text followed by non-text (e.g. an image or a table).\n\n```\n## 預設都是二級標題開頭\n\n:::: {.columns}\n::: {.column}\n\nLeft\n\n![]()\n\n:::\n::: {.column}\n\nLeft\n\n![]()\n\n:::\n::::\n\n```\n\n### Content with Caption\n\nThis layout is used for any non-two-column slides which contain text followed by non-text (e.g. an image or a table).\n\n```\n## 預設都是二級標題開頭\n\n一些字\n\n|表格|表格|\n|---|---|\n|內容|內容|\n```\n\n或\n\n```\n## 預設都是二級標題開頭\n\n一些字\n\n![圖片]()\n\n```\n\n### Blank\nThis layout is used for any slides which only contain blank content, e.g. a slide containing only speaker notes, or a slide containing only a non-breaking space.\n標題空白成## 然後加上加上註解，註解的寫法是用三個`:`後面加上`notes`，每頁都可以加上註解，個人會把reference都放在這個區域，到時候再貼上\n\n```\n##\n\n::: notes\n空白頁，到時候要放一張滿版大圖\n:::\n```\n\n### Title and Content\n\nThis layout is used for all slides which do not match the criteria for another layout.\n所有不符合上面規則的文件都會算成Title and Contnet，也是最常用的\n\n```\n## title\n\n- point\n- point\n- point\n\n```\n\n## Last but not least\n\n* 注意所有標題前後都要有空行，不然可能會排版出錯\n* 可以新增其他排版嗎？不行，這些是程式設計一開始就規定好的\n* 如果你也想要自己創一個模版，記得每一個上面提到的版式都要建(就算你最後沒有用到)，不然會報錯\n\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/blog/happy":{"title":"happy","content":"\n\u003e [!info]\n\u003e\n\u003e 🌱 來自: [[index]]\n\n# happy\n\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/diary/%E5%85%B6%E4%BB%96%E7%A7%91":{"title":"其他科","content":"# 其他科\n\n\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/diary/%E5%9C%A8mac%E9%97%9C%E9%96%89micrfosoft-update":{"title":"在mac關閉micrfosoft update","content":"\n\u003e [!info]\n\u003e\n\u003e 🌱 來自: [[command line know how]]\n\n# 在mac關閉micrfosoft update #🚧 施工中\n\n`launchctl disable gui/$(id -u)/com.microsoft.update.agent`\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/diary/%E5%A6%82%E4%BD%95%E6%89%93%E9%80%A0%E4%B8%80%E5%BA%A7%E7%9F%A5%E8%AD%98%E8%8A%B1%E5%9C%92":{"title":"如何打造一座知識花園","content":"\n\u003e [!info]\n\u003e\n\u003e 🌱 來自: [[index]]\n\n# 如何打造一座知識花園\n\n![🏞️](https://i.imgur.com/0rJEGJR.png)\n\n- [[什麼是數位花園]]\n- [[卡片盒筆記法]]\n- [[Obsidian]]\n- [[蜥蜴與VIM]]\n- [[Vimwiki設定]]\n- [[hugo]]\n- [[Quartz]]\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/diary/%E7%94%A8Zotero%E4%BE%86%E7%AE%A1%E7%90%86Paper":{"title":"用Zotero來管理Paper","content":"\n\u003e [!info]\n\u003e\n\u003e 🌱 來自: [[index]]\n\n# 用Zotero來管理Paper\n\n\u003e [!info]\n\u003e\n\u003e **👷 工事中，敬請期待 🚧**\n\n\n[[wow]]\n\n[[zotero plugin]]\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null},"/diary/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80":{"title":"程式語言","content":"\n\u003e [!info]\n\u003e\n\u003e 🌱 來自: [[index]]\n\n# 程式語言\n\n* [[regex]]\n* [[R programing]]\n* [[shell scripts]]\n*\n\n[[dcheckifalive]]\n\n\n","lastmodified":"2023-02-27T12:57:09.730108233Z","tags":null}}